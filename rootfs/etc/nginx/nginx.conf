# run nginx in foreground
daemon off;

# Use default user
user nginx www-data;

# No logging really needed
error_log stderr warn;

pid /var/run/nginx.pid;

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

events {
    worker_connections 768;
}

http {
  # How long to allow each connection to stay idle; longer values are better
  # for each individual client, particularly for SSL, but means that worker
  # connections are tied up longer. (Default: 65)
  keepalive_timeout 65;

  # Tell Nginx not to send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out. (adds TCP_CORK)
  tcp_nopush      on;

  include    /etc/nginx/mime.types;
  include    /etc/nginx/fastcgi.conf;
  default_type application/octet-stream;

  server {
    listen ${PORT};

    root ${WEB_ROOT};

    index  index.php index.html index.htm;
    access_log /dev/stdout;
    error_log stderr;

    # Don't pollute stdout with these
    location ~ ^/(js|styles|img|favicon.ico) {
        access_log off;
    }

    # pass the PHP scripts to FastCGI server listening on /var/run/php-fpm.sock
    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      fastcgi_keep_conn on;
      fastcgi_read_timeout ${PHP_MAX_EXECUTION_TIME};
      fastcgi_pass unix:/var/run/php-fpm.sock;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }

  }

}
